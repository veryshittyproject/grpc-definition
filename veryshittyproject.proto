syntax = "proto3";

option go_package = "github.com/veryshittyproject/grpc-definition;vspservice";

message User {
  string id = 1;
  string first_name = 4;
  string last_name = 5;
  enum Role {
    User = 0;
    Admin = 1;
  };
  Role role = 6;
}

message Student {
  string id = 1;
  string user_id = 2;
  optional User user = 3;
  string first_name = 4;
  string last_name = 5;
  enum Role {
    Regular = 0;
    DeputyLeader = 1;
    Leader = 2;
  };
  Role role = 6;
  optional string group_id = 7;
}

message Group {
  string id = 1;
  string code = 2;
  repeated Student students = 3;
}

// UserService
service UserService {
  rpc LoginTelegramDetails(LoginTelegramDetailsRequest) returns (LoginTelegramDetailsResponse);
  rpc LoginTelegram(LoginTelegramRequest) returns (LoginTelegramResponse);

  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc FindUsers(FindUsersRequest) returns (FindUsersResponse);

  rpc GetStudent(GetStudentRequest) returns (GetStudentResponse);
  rpc FindStudents(FindStudentsRequest) returns (FindStudentsResponse);
  rpc ImportStudents(ImportStudentsRequest) returns (ImportStudentsResponse);

  rpc FindGroups(FindGroupsRequest) returns (FindGroupsResponse);
  rpc GetGroup(GetGroupRequest) returns (GetGroupResponse);
}

message LoginTelegramDetailsRequest {}

message LoginTelegramDetailsResponse {
  string login = 1;
}

message LoginTelegramRequest {
  map<string, string> responseFields = 1;
  string hash = 2;
}

message LoginTelegramResponse {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message FindUsersRequest {
}

message FindUsersResponse {
  repeated User users = 1;
}

message GetStudentRequest {
  string user_id = 1;
}

message GetStudentResponse {
  Student student = 1;
}

message FindStudentsRequest {
  optional string group_id = 1;
}

message FindStudentsResponse {
  repeated Student students = 1;
}

message ImportStudentRow {
  string last_name = 1;
  string first_name = 2;
  string telegram_username = 3;
}

message ImportStudentsRequest {
  string group_code = 1;
  repeated ImportStudentRow students = 2;
}

message ImportStudentsResponse {}

message FindGroupsRequest {
  bool include_students = 1;
}

message FindGroupsResponse {
  repeated Group group = 1;
}

message GetGroupRequest {
  string group_id = 1;
  bool include_students = 2;
}

message GetGroupResponse {
  Group group = 1;
}
